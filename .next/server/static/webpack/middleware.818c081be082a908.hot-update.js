"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_API_ROUTES: () => (/* binding */ DEFAULT_API_ROUTES),\n/* harmony export */   DEFAULT_CONFIG_MATCHER: () => (/* binding */ DEFAULT_CONFIG_MATCHER),\n/* harmony export */   DEFAULT_IGNORED_ROUTES: () => (/* binding */ DEFAULT_IGNORED_ROUTES),\n/* harmony export */   authMiddleware: () => (/* binding */ authMiddleware),\n/* harmony export */   createRouteMatcher: () => (/* binding */ createRouteMatcher)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/./node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var _clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/devBrowser */ \"(middleware)/./node_modules/@clerk/shared/dist/devBrowser.mjs\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/response.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _authenticateRequest__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./authenticateRequest */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/authenticateRequest.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _redirect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./redirect */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/redirect.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./url */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst INFINITE_REDIRECTION_LOOP_COOKIE = \"__clerk_redirection_loop\";\nconst DEFAULT_CONFIG_MATCHER = [\n    \"/((?!.+\\\\.[\\\\w]+$|_next).*)\",\n    \"/\",\n    \"/(api|trpc)(.*)\"\n];\nconst DEFAULT_IGNORED_ROUTES = [\n    `/((?!api|trpc))(_next.*|.+\\\\.[\\\\w]+$)`\n];\nconst DEFAULT_API_ROUTES = [\n    \"/api/(.*)\",\n    \"/trpc/(.*)\"\n];\nconst authMiddleware = (...args)=>{\n    const [params = {}] = args;\n    const { beforeAuth, afterAuth, publicRoutes, ignoredRoutes, apiRoutes, ...options } = params;\n    const isIgnoredRoute = createRouteMatcher(ignoredRoutes || DEFAULT_IGNORED_ROUTES);\n    const isPublicRoute = createRouteMatcher(withDefaultPublicRoutes(publicRoutes));\n    const isApiRoute = createApiRoutes(apiRoutes);\n    const defaultAfterAuth = createDefaultAfterAuth(isPublicRoute, isApiRoute, params);\n    return (0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_3__.withLogger)(\"authMiddleware\", (logger)=>async (_req, evt)=>{\n            if (options.debug) {\n                logger.enable();\n            }\n            const req = withNormalizedClerkUrl(_req);\n            logger.debug(\"URL debug\", {\n                url: req.nextUrl.href,\n                method: req.method,\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_4__.stringifyHeaders)(req.headers),\n                nextUrl: req.nextUrl.href,\n                clerkUrl: req.experimental_clerkUrl.href\n            });\n            logger.debug(\"Options debug\", {\n                ...options,\n                beforeAuth: !!beforeAuth,\n                afterAuth: !!afterAuth\n            });\n            if (isIgnoredRoute(req)) {\n                logger.debug({\n                    isIgnoredRoute: true\n                });\n                if ((0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(options.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY) && !params.ignoredRoutes) {\n                    console.warn((0,_errors__WEBPACK_IMPORTED_MODULE_7__.receivedRequestForIgnoredRoute)(req.experimental_clerkUrl.href, JSON.stringify(DEFAULT_CONFIG_MATCHER)));\n                }\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next(), _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"ignored-route\");\n            }\n            const beforeAuthRes = await (beforeAuth && beforeAuth(req, evt));\n            if (beforeAuthRes === false) {\n                logger.debug(\"Before auth returned false, skipping\");\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next(), _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"skip\");\n            } else if (beforeAuthRes && (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isRedirect)(beforeAuthRes)) {\n                logger.debug(\"Before auth returned redirect, following redirect\");\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(beforeAuthRes, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"redirect\");\n            }\n            const requestState = await (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.authenticateRequest)(req, options);\n            if (requestState.isUnknown) {\n                logger.debug(\"authenticateRequest state is unknown\", requestState);\n                return (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.handleUnknownState)(requestState);\n            } else if (requestState.isInterstitial && isApiRoute(req)) {\n                logger.debug(\"authenticateRequest state is interstitial in an API route\", requestState);\n                return (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.handleUnknownState)(requestState);\n            } else if (requestState.isInterstitial) {\n                logger.debug(\"authenticateRequest state is interstitial\", requestState);\n                assertClockSkew(requestState, options);\n                const res = (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.handleInterstitialState)(requestState, options);\n                return assertInfiniteRedirectionLoop(req, res, options, requestState);\n            }\n            const auth = Object.assign(requestState.toAuth(), {\n                isPublicRoute: isPublicRoute(req),\n                isApiRoute: isApiRoute(req)\n            });\n            logger.debug(()=>({\n                    auth: JSON.stringify(auth),\n                    debug: auth.debug()\n                }));\n            const afterAuthRes = await (afterAuth || defaultAfterAuth)(auth, req, evt);\n            const finalRes = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.mergeResponses)(beforeAuthRes, afterAuthRes) || next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next();\n            logger.debug(()=>({\n                    mergedHeaders: (0,_utils__WEBPACK_IMPORTED_MODULE_4__.stringifyHeaders)(finalRes.headers)\n                }));\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_4__.isRedirect)(finalRes)) {\n                logger.debug(\"Final response is redirect, following redirect\");\n                const res = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(finalRes, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"redirect\");\n                return appendDevBrowserOnCrossOrigin(req, res, options);\n            }\n            if (options.debug) {\n                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.setRequestHeadersOnNextResponse)(finalRes, req, {\n                    [_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug]: \"true\"\n                });\n                logger.debug(`Added ${_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug} on request`);\n            }\n            return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.decorateRequest)(req, finalRes, requestState);\n        });\n};\nconst createRouteMatcher = (routes)=>{\n    if (typeof routes === \"function\") {\n        return (req)=>routes(req);\n    }\n    const routePatterns = [\n        routes || \"\"\n    ].flat().filter(Boolean);\n    const matchers = precomputePathRegex(routePatterns);\n    return (req)=>matchers.some((matcher)=>matcher.test(req.nextUrl.pathname));\n};\nconst createDefaultAfterAuth = (isPublicRoute, isApiRoute, params)=>{\n    return (auth, req)=>{\n        if (!auth.userId && !isPublicRoute(req)) {\n            if (isApiRoute(req)) {\n                informAboutProtectedRoute(req.experimental_clerkUrl.pathname, params, true);\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.apiEndpointUnauthorizedNextResponse)();\n            } else {\n                informAboutProtectedRoute(req.experimental_clerkUrl.pathname, params, false);\n            }\n            return (0,_redirect__WEBPACK_IMPORTED_MODULE_9__.redirectToSignIn)({\n                returnBackUrl: req.experimental_clerkUrl.href\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next();\n    };\n};\nconst precomputePathRegex = (patterns)=>{\n    return patterns.map((pattern)=>pattern instanceof RegExp ? pattern : _utils__WEBPACK_IMPORTED_MODULE_10__.paths.toRegexp(pattern));\n};\nconst matchRoutesStartingWith = (path)=>{\n    path = path.replace(/\\/$/, \"\");\n    return new RegExp(`^${path}(/.*)?$`);\n};\nconst withDefaultPublicRoutes = (publicRoutes)=>{\n    if (typeof publicRoutes === \"function\") {\n        return publicRoutes;\n    }\n    const routes = [\n        publicRoutes || \"\"\n    ].flat().filter(Boolean);\n    const signInUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || \"\";\n    if (signInUrl) {\n        routes.push(matchRoutesStartingWith(signInUrl));\n    }\n    const signUpUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || \"\";\n    if (signUpUrl) {\n        routes.push(matchRoutesStartingWith(signUpUrl));\n    }\n    return routes;\n};\nconst appendDevBrowserOnCrossOrigin = (req, res, opts)=>{\n    const location = res.headers.get(\"location\");\n    const shouldAppendDevBrowser = res.headers.get(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo) === \"true\";\n    if (shouldAppendDevBrowser && !!location && (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY) && (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isCrossOrigin)(req.experimental_clerkUrl, location)) {\n        const dbJwt = req.cookies.get(_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.DEV_BROWSER_JWT_MARKER)?.value || \"\";\n        const url = new URL(location);\n        const asQueryParam = (0,_url__WEBPACK_IMPORTED_MODULE_11__.isDevAccountPortalOrigin)(url.hostname);\n        const urlWithDevBrowser = (0,_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.setDevBrowserJWTInURL)(url, dbJwt, asQueryParam);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].redirect(urlWithDevBrowser.href, res);\n    }\n    return res;\n};\nconst createApiRoutes = (apiRoutes)=>{\n    if (apiRoutes) {\n        return createRouteMatcher(apiRoutes);\n    }\n    const isDefaultApiRoute = createRouteMatcher(DEFAULT_API_ROUTES);\n    return (req)=>isDefaultApiRoute(req) || isRequestMethodIndicatingApiRoute(req) || isRequestContentTypeJson(req);\n};\nconst isRequestContentTypeJson = (req)=>{\n    const requestContentType = req.headers.get(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ContentType);\n    return requestContentType === _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.ContentTypes.Json;\n};\nconst isRequestMethodIndicatingApiRoute = (req)=>{\n    const requestMethod = req.method.toLowerCase();\n    return ![\n        \"get\",\n        \"head\",\n        \"options\"\n    ].includes(requestMethod);\n};\nconst assertClockSkew = (requestState, opts)=>{\n    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY)) {\n        return;\n    }\n    if (requestState.reason === \"token-not-active-yet\") {\n        throw new Error((0,_errors__WEBPACK_IMPORTED_MODULE_7__.clockSkewDetected)(requestState.message));\n    }\n};\nconst assertInfiniteRedirectionLoop = (req, res, opts, requestState)=>{\n    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY)) {\n        return res;\n    }\n    const infiniteRedirectsCounter = Number(req.cookies.get(INFINITE_REDIRECTION_LOOP_COOKIE)?.value) || 0;\n    if (infiniteRedirectsCounter === 6) {\n        if (requestState.reason === \"token-expired\") {\n            throw new Error((0,_errors__WEBPACK_IMPORTED_MODULE_7__.clockSkewDetected)(requestState.message));\n        }\n        throw new Error((0,_errors__WEBPACK_IMPORTED_MODULE_7__.infiniteRedirectLoopDetected)());\n    }\n    if (req.headers.get(\"referer\") === req.url) {\n        res.cookies.set({\n            name: INFINITE_REDIRECTION_LOOP_COOKIE,\n            value: `${infiniteRedirectsCounter + 1}`,\n            maxAge: 3\n        });\n    }\n    return res;\n};\nconst withNormalizedClerkUrl = (req)=>{\n    const clerkUrl = req.nextUrl.clone();\n    const originUrl = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.buildRequestUrl)(req);\n    clerkUrl.port = originUrl.port;\n    clerkUrl.protocol = originUrl.protocol;\n    clerkUrl.host = originUrl.host;\n    return Object.assign(req, {\n        experimental_clerkUrl: clerkUrl\n    });\n};\nconst informAboutProtectedRoute = (path, params, isApiRoute)=>{\n    if (params.debug || (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(params.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY)) {\n        console.warn((0,_errors__WEBPACK_IMPORTED_MODULE_7__.informAboutProtectedRouteInfo)(path, !!params.publicRoutes, !!params.ignoredRoutes, isApiRoute, DEFAULT_IGNORED_ROUTES));\n    }\n};\n //# sourceMappingURL=authMiddleware.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/constants.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_KEY: () => (/* binding */ API_KEY),\n/* harmony export */   API_URL: () => (/* binding */ API_URL),\n/* harmony export */   API_VERSION: () => (/* binding */ API_VERSION),\n/* harmony export */   CLERK_JS_URL: () => (/* binding */ CLERK_JS_URL),\n/* harmony export */   CLERK_JS_VERSION: () => (/* binding */ CLERK_JS_VERSION),\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   FRONTEND_API: () => (/* binding */ FRONTEND_API),\n/* harmony export */   IS_SATELLITE: () => (/* binding */ IS_SATELLITE),\n/* harmony export */   JS_VERSION: () => (/* binding */ JS_VERSION),\n/* harmony export */   PROXY_URL: () => (/* binding */ PROXY_URL),\n/* harmony export */   PUBLISHABLE_KEY: () => (/* binding */ PUBLISHABLE_KEY),\n/* harmony export */   SECRET_KEY: () => (/* binding */ SECRET_KEY),\n/* harmony export */   SIGN_IN_URL: () => (/* binding */ SIGN_IN_URL),\n/* harmony export */   SIGN_UP_URL: () => (/* binding */ SIGN_UP_URL)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(middleware)/./node_modules/@clerk/shared/dist/deprecated.mjs\");\n\nconst JS_VERSION = process.env.CLERK_JS_VERSION || \"\";\nif (JS_VERSION) {\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"CLERK_JS_VERSION\", \"Use `NEXT_PUBLIC_CLERK_JS_VERSION` environment variable instead.\");\n}\nconst CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || \"\";\nconst CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS || \"\";\nconst API_URL = process.env.CLERK_API_URL || \"https://api.clerk.dev\";\nconst API_VERSION = process.env.CLERK_API_VERSION || \"v1\";\nconst API_KEY = process.env.CLERK_API_KEY || \"\";\nif (API_KEY) {\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"CLERK_API_KEY\", \"Use `CLERK_SECRET_KEY` environment variable instead.\");\n}\nconst SECRET_KEY = process.env.CLERK_SECRET_KEY || \"\";\nconst FRONTEND_API = process.env.NEXT_PUBLIC_CLERK_FRONTEND_API || \"\";\nif (FRONTEND_API) {\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"NEXT_PUBLIC_CLERK_FRONTEND_API\", \"Use `NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY` environment variable instead.\");\n}\nconst PUBLISHABLE_KEY = \"pk_test_ZGlzdGluY3QtcGVyY2gtNDcuY2xlcmsuYWNjb3VudHMuZGV2JA\" || 0;\nconst DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || \"\";\nconst PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || \"\";\nconst IS_SATELLITE = process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE === \"true\" || false;\nconst SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || \"\";\nconst SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || \"\";\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0Q7QUFDdEQsTUFBTUMsYUFBYUMsUUFBUUMsR0FBRyxDQUFDQyxnQkFBZ0IsSUFBSTtBQUNuRCxJQUFJSCxZQUFZO0lBQ2RELG9FQUFVQSxDQUFDLG9CQUFvQjtBQUNqQztBQUNBLE1BQU1JLG1CQUFtQkYsUUFBUUMsR0FBRyxDQUFDRSw0QkFBNEIsSUFBSTtBQUNyRSxNQUFNQyxlQUFlSixRQUFRQyxHQUFHLENBQUNJLG9CQUFvQixJQUFJO0FBQ3pELE1BQU1DLFVBQVVOLFFBQVFDLEdBQUcsQ0FBQ00sYUFBYSxJQUFJO0FBQzdDLE1BQU1DLGNBQWNSLFFBQVFDLEdBQUcsQ0FBQ1EsaUJBQWlCLElBQUk7QUFDckQsTUFBTUMsVUFBVVYsUUFBUUMsR0FBRyxDQUFDVSxhQUFhLElBQUk7QUFDN0MsSUFBSUQsU0FBUztJQUNYWixvRUFBVUEsQ0FBQyxpQkFBaUI7QUFDOUI7QUFDQSxNQUFNYyxhQUFhWixRQUFRQyxHQUFHLENBQUNZLGdCQUFnQixJQUFJO0FBQ25ELE1BQU1DLGVBQWVkLFFBQVFDLEdBQUcsQ0FBQ2MsOEJBQThCLElBQUk7QUFDbkUsSUFBSUQsY0FBYztJQUNoQmhCLG9FQUFVQSxDQUFDLGtDQUFrQztBQUMvQztBQUNBLE1BQU1rQixrQkFBa0JoQiw0REFBNkMsSUFBSSxDQUFFO0FBQzNFLE1BQU1rQixTQUFTbEIsUUFBUUMsR0FBRyxDQUFDa0Isd0JBQXdCLElBQUk7QUFDdkQsTUFBTUMsWUFBWXBCLFFBQVFDLEdBQUcsQ0FBQ29CLDJCQUEyQixJQUFJO0FBQzdELE1BQU1DLGVBQWV0QixRQUFRQyxHQUFHLENBQUNzQiw4QkFBOEIsS0FBSyxVQUFVO0FBQzlFLE1BQU1DLGNBQWN4QixRQUFRQyxHQUFHLENBQUN3Qiw2QkFBNkIsSUFBSTtBQUNqRSxNQUFNQyxjQUFjMUIsUUFBUUMsR0FBRyxDQUFDMEIsNkJBQTZCLElBQUk7QUFnQi9ELENBQ0YscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jb25zdGFudHMuanM/Y2QyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXByZWNhdGVkIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvZGVwcmVjYXRlZFwiO1xuY29uc3QgSlNfVkVSU0lPTiA9IHByb2Nlc3MuZW52LkNMRVJLX0pTX1ZFUlNJT04gfHwgXCJcIjtcbmlmIChKU19WRVJTSU9OKSB7XG4gIGRlcHJlY2F0ZWQoXCJDTEVSS19KU19WRVJTSU9OXCIsIFwiVXNlIGBORVhUX1BVQkxJQ19DTEVSS19KU19WRVJTSU9OYCBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnN0ZWFkLlwiKTtcbn1cbmNvbnN0IENMRVJLX0pTX1ZFUlNJT04gPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19KU19WRVJTSU9OIHx8IFwiXCI7XG5jb25zdCBDTEVSS19KU19VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19KUyB8fCBcIlwiO1xuY29uc3QgQVBJX1VSTCA9IHByb2Nlc3MuZW52LkNMRVJLX0FQSV9VUkwgfHwgXCJodHRwczovL2FwaS5jbGVyay5kZXZcIjtcbmNvbnN0IEFQSV9WRVJTSU9OID0gcHJvY2Vzcy5lbnYuQ0xFUktfQVBJX1ZFUlNJT04gfHwgXCJ2MVwiO1xuY29uc3QgQVBJX0tFWSA9IHByb2Nlc3MuZW52LkNMRVJLX0FQSV9LRVkgfHwgXCJcIjtcbmlmIChBUElfS0VZKSB7XG4gIGRlcHJlY2F0ZWQoXCJDTEVSS19BUElfS0VZXCIsIFwiVXNlIGBDTEVSS19TRUNSRVRfS0VZYCBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnN0ZWFkLlwiKTtcbn1cbmNvbnN0IFNFQ1JFVF9LRVkgPSBwcm9jZXNzLmVudi5DTEVSS19TRUNSRVRfS0VZIHx8IFwiXCI7XG5jb25zdCBGUk9OVEVORF9BUEkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19GUk9OVEVORF9BUEkgfHwgXCJcIjtcbmlmIChGUk9OVEVORF9BUEkpIHtcbiAgZGVwcmVjYXRlZChcIk5FWFRfUFVCTElDX0NMRVJLX0ZST05URU5EX0FQSVwiLCBcIlVzZSBgTkVYVF9QVUJMSUNfQ0xFUktfUFVCTElTSEFCTEVfS0VZYCBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnN0ZWFkLlwiKTtcbn1cbmNvbnN0IFBVQkxJU0hBQkxFX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX1BVQkxJU0hBQkxFX0tFWSB8fCBcIlwiO1xuY29uc3QgRE9NQUlOID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfRE9NQUlOIHx8IFwiXCI7XG5jb25zdCBQUk9YWV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19QUk9YWV9VUkwgfHwgXCJcIjtcbmNvbnN0IElTX1NBVEVMTElURSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0lTX1NBVEVMTElURSA9PT0gXCJ0cnVlXCIgfHwgZmFsc2U7XG5jb25zdCBTSUdOX0lOX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX1NJR05fSU5fVVJMIHx8IFwiXCI7XG5jb25zdCBTSUdOX1VQX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX1NJR05fVVBfVVJMIHx8IFwiXCI7XG5leHBvcnQge1xuICBBUElfS0VZLFxuICBBUElfVVJMLFxuICBBUElfVkVSU0lPTixcbiAgQ0xFUktfSlNfVVJMLFxuICBDTEVSS19KU19WRVJTSU9OLFxuICBET01BSU4sXG4gIEZST05URU5EX0FQSSxcbiAgSVNfU0FURUxMSVRFLFxuICBKU19WRVJTSU9OLFxuICBQUk9YWV9VUkwsXG4gIFBVQkxJU0hBQkxFX0tFWSxcbiAgU0VDUkVUX0tFWSxcbiAgU0lHTl9JTl9VUkwsXG4gIFNJR05fVVBfVVJMXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXByZWNhdGVkIiwiSlNfVkVSU0lPTiIsInByb2Nlc3MiLCJlbnYiLCJDTEVSS19KU19WRVJTSU9OIiwiTkVYVF9QVUJMSUNfQ0xFUktfSlNfVkVSU0lPTiIsIkNMRVJLX0pTX1VSTCIsIk5FWFRfUFVCTElDX0NMRVJLX0pTIiwiQVBJX1VSTCIsIkNMRVJLX0FQSV9VUkwiLCJBUElfVkVSU0lPTiIsIkNMRVJLX0FQSV9WRVJTSU9OIiwiQVBJX0tFWSIsIkNMRVJLX0FQSV9LRVkiLCJTRUNSRVRfS0VZIiwiQ0xFUktfU0VDUkVUX0tFWSIsIkZST05URU5EX0FQSSIsIk5FWFRfUFVCTElDX0NMRVJLX0ZST05URU5EX0FQSSIsIlBVQkxJU0hBQkxFX0tFWSIsIk5FWFRfUFVCTElDX0NMRVJLX1BVQkxJU0hBQkxFX0tFWSIsIkRPTUFJTiIsIk5FWFRfUFVCTElDX0NMRVJLX0RPTUFJTiIsIlBST1hZX1VSTCIsIk5FWFRfUFVCTElDX0NMRVJLX1BST1hZX1VSTCIsIklTX1NBVEVMTElURSIsIk5FWFRfUFVCTElDX0NMRVJLX0lTX1NBVEVMTElURSIsIlNJR05fSU5fVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9JTl9VUkwiLCJTSUdOX1VQX1VSTCIsIk5FWFRfUFVCTElDX0NMRVJLX1NJR05fVVBfVVJMIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/mergeNextClerkPropsWithEnv.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/mergeNextClerkPropsWithEnv.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeNextClerkPropsWithEnv: () => (/* binding */ mergeNextClerkPropsWithEnv)\n/* harmony export */ });\nconst mergeNextClerkPropsWithEnv = (props)=>{\n    return {\n        ...props,\n        frontendApi: props.frontendApi || process.env.NEXT_PUBLIC_CLERK_FRONTEND_API || \"\",\n        publishableKey: props.publishableKey || \"pk_test_ZGlzdGluY3QtcGVyY2gtNDcuY2xlcmsuYWNjb3VudHMuZGV2JA\" || 0,\n        clerkJSUrl: props.clerkJSUrl || process.env.NEXT_PUBLIC_CLERK_JS,\n        clerkJSVersion: props.clerkJSVersion || process.env.NEXT_PUBLIC_CLERK_JS_VERSION,\n        proxyUrl: props.proxyUrl || process.env.NEXT_PUBLIC_CLERK_PROXY_URL || \"\",\n        domain: props.domain || process.env.NEXT_PUBLIC_CLERK_DOMAIN || \"\",\n        isSatellite: props.isSatellite || process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE === \"true\",\n        signInUrl: props.signInUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || \"\",\n        signUpUrl: props.signUpUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || \"\",\n        afterSignInUrl: props.afterSignInUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL || \"\",\n        afterSignUpUrl: props.afterSignUpUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL || \"\",\n        sdkMetadata: {\n            name: \"@clerk/nextjs\",\n            version: \"4.29.5\"\n        }\n    };\n};\n //# sourceMappingURL=mergeNextClerkPropsWithEnv.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvbWVyZ2VOZXh0Q2xlcmtQcm9wc1dpdGhFbnYuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLDZCQUE2QixDQUFDQztJQUNsQyxPQUFPO1FBQ0wsR0FBR0EsS0FBSztRQUNSQyxhQUFhRCxNQUFNQyxXQUFXLElBQUlDLFFBQVFDLEdBQUcsQ0FBQ0MsOEJBQThCLElBQUk7UUFDaEZDLGdCQUFnQkwsTUFBTUssY0FBYyxJQUFJSCw0REFBNkMsSUFBSSxDQUFFO1FBQzNGSyxZQUFZUCxNQUFNTyxVQUFVLElBQUlMLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CO1FBQ2hFQyxnQkFBZ0JULE1BQU1TLGNBQWMsSUFBSVAsUUFBUUMsR0FBRyxDQUFDTyw0QkFBNEI7UUFDaEZDLFVBQVVYLE1BQU1XLFFBQVEsSUFBSVQsUUFBUUMsR0FBRyxDQUFDUywyQkFBMkIsSUFBSTtRQUN2RUMsUUFBUWIsTUFBTWEsTUFBTSxJQUFJWCxRQUFRQyxHQUFHLENBQUNXLHdCQUF3QixJQUFJO1FBQ2hFQyxhQUFhZixNQUFNZSxXQUFXLElBQUliLFFBQVFDLEdBQUcsQ0FBQ2EsOEJBQThCLEtBQUs7UUFDakZDLFdBQVdqQixNQUFNaUIsU0FBUyxJQUFJZixRQUFRQyxHQUFHLENBQUNlLDZCQUE2QixJQUFJO1FBQzNFQyxXQUFXbkIsTUFBTW1CLFNBQVMsSUFBSWpCLFFBQVFDLEdBQUcsQ0FBQ2lCLDZCQUE2QixJQUFJO1FBQzNFQyxnQkFBZ0JyQixNQUFNcUIsY0FBYyxJQUFJbkIsUUFBUUMsR0FBRyxDQUFDbUIsbUNBQW1DLElBQUk7UUFDM0ZDLGdCQUFnQnZCLE1BQU11QixjQUFjLElBQUlyQixRQUFRQyxHQUFHLENBQUNxQixtQ0FBbUMsSUFBSTtRQUMzRkMsYUFBYTtZQUNYQyxNQUFNO1lBQ05DLFNBQVM7UUFDWDtJQUNGO0FBQ0Y7QUFHRSxDQUNGLHNEQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS91dGlscy9tZXJnZU5leHRDbGVya1Byb3BzV2l0aEVudi5qcz8zZTYyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1lcmdlTmV4dENsZXJrUHJvcHNXaXRoRW52ID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiB7XG4gICAgLi4ucHJvcHMsXG4gICAgZnJvbnRlbmRBcGk6IHByb3BzLmZyb250ZW5kQXBpIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0ZST05URU5EX0FQSSB8fCBcIlwiLFxuICAgIHB1Ymxpc2hhYmxlS2V5OiBwcm9wcy5wdWJsaXNoYWJsZUtleSB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19QVUJMSVNIQUJMRV9LRVkgfHwgXCJcIixcbiAgICBjbGVya0pTVXJsOiBwcm9wcy5jbGVya0pTVXJsIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0pTLFxuICAgIGNsZXJrSlNWZXJzaW9uOiBwcm9wcy5jbGVya0pTVmVyc2lvbiB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19KU19WRVJTSU9OLFxuICAgIHByb3h5VXJsOiBwcm9wcy5wcm94eVVybCB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19QUk9YWV9VUkwgfHwgXCJcIixcbiAgICBkb21haW46IHByb3BzLmRvbWFpbiB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19ET01BSU4gfHwgXCJcIixcbiAgICBpc1NhdGVsbGl0ZTogcHJvcHMuaXNTYXRlbGxpdGUgfHwgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFID09PSBcInRydWVcIixcbiAgICBzaWduSW5Vcmw6IHByb3BzLnNpZ25JblVybCB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19TSUdOX0lOX1VSTCB8fCBcIlwiLFxuICAgIHNpZ25VcFVybDogcHJvcHMuc2lnblVwVXJsIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX1NJR05fVVBfVVJMIHx8IFwiXCIsXG4gICAgYWZ0ZXJTaWduSW5Vcmw6IHByb3BzLmFmdGVyU2lnbkluVXJsIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0FGVEVSX1NJR05fSU5fVVJMIHx8IFwiXCIsXG4gICAgYWZ0ZXJTaWduVXBVcmw6IHByb3BzLmFmdGVyU2lnblVwVXJsIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0FGVEVSX1NJR05fVVBfVVJMIHx8IFwiXCIsXG4gICAgc2RrTWV0YWRhdGE6IHtcbiAgICAgIG5hbWU6IFwiQGNsZXJrL25leHRqc1wiLFxuICAgICAgdmVyc2lvbjogXCI0LjI5LjVcIlxuICAgIH1cbiAgfTtcbn07XG5leHBvcnQge1xuICBtZXJnZU5leHRDbGVya1Byb3BzV2l0aEVudlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lcmdlTmV4dENsZXJrUHJvcHNXaXRoRW52LmpzLm1hcCJdLCJuYW1lcyI6WyJtZXJnZU5leHRDbGVya1Byb3BzV2l0aEVudiIsInByb3BzIiwiZnJvbnRlbmRBcGkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQ0xFUktfRlJPTlRFTkRfQVBJIiwicHVibGlzaGFibGVLZXkiLCJORVhUX1BVQkxJQ19DTEVSS19QVUJMSVNIQUJMRV9LRVkiLCJjbGVya0pTVXJsIiwiTkVYVF9QVUJMSUNfQ0xFUktfSlMiLCJjbGVya0pTVmVyc2lvbiIsIk5FWFRfUFVCTElDX0NMRVJLX0pTX1ZFUlNJT04iLCJwcm94eVVybCIsIk5FWFRfUFVCTElDX0NMRVJLX1BST1hZX1VSTCIsImRvbWFpbiIsIk5FWFRfUFVCTElDX0NMRVJLX0RPTUFJTiIsImlzU2F0ZWxsaXRlIiwiTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFIiwic2lnbkluVXJsIiwiTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9JTl9VUkwiLCJzaWduVXBVcmwiLCJORVhUX1BVQkxJQ19DTEVSS19TSUdOX1VQX1VSTCIsImFmdGVyU2lnbkluVXJsIiwiTkVYVF9QVUJMSUNfQ0xFUktfQUZURVJfU0lHTl9JTl9VUkwiLCJhZnRlclNpZ25VcFVybCIsIk5FWFRfUFVCTElDX0NMRVJLX0FGVEVSX1NJR05fVVBfVVJMIiwic2RrTWV0YWRhdGEiLCJuYW1lIiwidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/mergeNextClerkPropsWithEnv.js\n");

/***/ })

});